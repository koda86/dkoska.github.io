[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Daniel Koska",
    "section": "",
    "text": "This is intended to be a collection of ongoing and past projects, papers, coding adventures and whatever else seems worth sharing."
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Daniel Koska",
    "section": "",
    "text": "This is intended to be a collection of ongoing and past projects, papers, coding adventures and whatever else seems worth sharing."
  },
  {
    "objectID": "index.html#methods-for-biomechanical-time-series-data",
    "href": "index.html#methods-for-biomechanical-time-series-data",
    "title": "Daniel Koska",
    "section": "Methods for biomechanical time series data",
    "text": "Methods for biomechanical time series data\nA lot of my recent work, including my PhD thesis, has evolved around methods for adequately characterizing continuous (biomechanical) data.\n\nFunBootBand (R)\nFunBootBand (Github)\nThe FunBootBand package contains a function to generate statistical (prediction or confidence) bands from curve data using a functional approach and bootstrapping.\n\n\n\n\n\nThe development version of FunBootBand can be installed from GitHub with:\ndevtools::install_github(“koda86/FunBootBand”)\n\n\nFunBootBand (Python)\nThis is currently on my to-do list and should be a good way to dive deeper into Python.\n\n\nEffort to compress\nWhile trying out different complexity measures, I stumbled upon the ‘effort to compress’ (ETC) method introduced in (Nagaraj et al., 2013). ETC is a complexity measure for which code was originally presented as Matlab and Python Code. This repository contains an R implementation of the algorithm.\neffort2compress (GitHub)\nSee also the website of Nithin Nagaraj for the Matlab and Python versions: Website Nagaraj\nPython implementation: Github"
  }
]